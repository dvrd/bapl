#!/usr/bin/env lua

local intrprtr = require "week-7.interpreter"
local cmplr = require "week-7.compiler"
local vm = require "week-7.vm"

local utils = require "utils.core"

local flags = utils.parseArgs(arg)

local mem = {}
local function exec(input, is_eval)
	local ast = intrprtr.parse(input)

	if ast ~= nil then
		local code = cmplr.compile(ast)
		local stack = vm.stack:new()
		vm.exec(code, mem, stack, flags)
		if is_eval then print(stack.data) end
	end
end

local input = ""
if flags["expression"] then
	input = flags["expression"]
	exec(input)
elseif flags["filename"] then
	local f = io.open(flags["filename"], "r")
	if f then
		input = f:read("*all")
		f:close()
		exec(input)
	end
elseif flags["checkhealth"] then
	dofile("./" .. flags["checkhealth"] .. "/tests.lua")
elseif #arg == 0 or flags["trace"] then
	while true do
		io.write(">> ")
		input = io.read()

		if input == "q" then
			os.exit()
		elseif input == "clear" then
			os.execute("clear")
		else
			exec(input, "eval")
		end
	end
end
